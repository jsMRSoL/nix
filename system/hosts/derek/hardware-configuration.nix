# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "nvme"
    "xhci_pci"
    # "ehci_pci"
    "ahci"
    # "usb_storage"
    "usbhid"
    "sd_mod"
    # "sr_mod"
    # "sdhci_pci"
    # "rtsx_pci_sdmmc"
  ];
  boot.initrd.kernelModules = [ ];
  # boot.kernelModules = [ "kvm-intel" ];
  boot.kernelModules = [ 
    "kvm-amd"
    "i2c-dev"
    "ddcci_backlight"
  ];
  boot.kernelParams = [
    "acpi_backlight=video"
  ];
  boot.extraModulePackages = [ ];
  services.udev.extraRules = ''
    KERNEL=="i2c-[0-9]*", GROUP="i2c", MODE="0660"
  '';

  fileSystems."/" = {
    # device = "/dev/disk/by-uuid/80999860-daad-478c-960c-81b7c1770d14";
    device = "/dev/disk/by-partlabel/NIXOS";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    # device = "/dev/disk/by-uuid/46F2-52AD";
    device = "/dev/disk/by-partlabel/BOOT";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  fileSystems."/mnt/data" = {
    device = "/dev/disk/by-partlabel/DATA";
    fsType = "ext4";
  };

  fileSystems."/home/simon/Documents" = {
    depends = [
      "/home/simon"
      "/mnt/data"
    ];
    device = "/mnt/data/Documents";
    options = [ "bind" ];
  };

  fileSystems."/home/simon/Downloads" = {
    depends = [
      "/home/simon"
      "/mnt/data"
    ];
    device = "/mnt/data/Downloads";
    options = [ "bind" ];
  };

  fileSystems."/home/simon/Music" = {
    depends = [
      "/home/simon"
      "/mnt/data"
    ];
    device = "/mnt/data/Music";
    options = [ "bind" ];
  };

  fileSystems."/home/simon/Pictures" = {
    depends = [
      "/home/simon"
      "/mnt/data"
    ];
    device = "/mnt/data/Pictures";
    options = [ "bind" ];
  };

  fileSystems."/home/simon/Projects" = {
    depends = [
      "/home/simon"
      "/mnt/data"
    ];
    device = "/mnt/data/Projects";
    options = [ "bind" ];
  };

  fileSystems."/home/simon/Videos" = {
    depends = [
      "/home/simon"
      "/mnt/data"
    ];
    device = "/mnt/data/Videos";
    options = [ "bind" ];
  };

  swapDevices = [
    { device = "/dev/disk/by-partlabel/SWAP"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
